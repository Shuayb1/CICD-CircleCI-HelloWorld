# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  print_pipeline_id:
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  print-hello:
    docker:
      - image:  circleci/node:13.8.0
    steps:
      - checkout
      - run:  echo hello
  print-world:
    docker:
      - image:  circleci/node:13.8.0
    steps:
      - checkout
      - run:  echo world 
  add-developer-name:
    docker:
      - image: cimg/base:2020.01
    steps:
     - checkout
     - run:
        name: "echo an env var that is part of our project"
        command: 
          echo $Developer_name
  save_hello_world_output:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:  echo "hello world" > ~/output.txt
      - persist_to_workspace: 
          root: ~/
          paths:
            - output.txt
  print_output_file:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt
  command_job:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id
  failed_job:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: exit 1
      - run:
          name: on error
          command: echo "The job failed!"
          when: on_fail


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  welcome:
    jobs:
      - print-hello
      - print-world:
          requires: 
            - print-hello
      - add-developer-name
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
      - command_job
      - failed_job
